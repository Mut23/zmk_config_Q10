/*
 * Copyright (c) 2023 ZitaoTech
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>

 
#define SYM 1
#define UPPER 2


/ {
    &sk {
       release-after-ms = <2500>;
       quick-release;
       ignore-modifiers;
   };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        app_shift {
            bindings = <&sk LA(TAB)>;
            timeout-ms = <2000>;
            key-positions = <2>;
            layers = <0>,<1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
//         --------------------------------------------------------------------------------------------------------------------------         
//         |    Shoulder Key1    |                                                                             |    Shoulder Key2    |     
// |         Call key      |      Blackberry Key        |    Trackpad    |             Back Key                |             Endcall Key          |
// |     Q      |     W    |     E    |     R    |      T      |       Y        |       U        |        I        |       O      |      P        |     
// |     A      |     S    |     D    |     F    |      G      |       H        |       J        |        K        |       L      |      ←        |  
// |     alt    |     Z    |     X    |     C    |      V      |       B        |       N        |        M        |       $      |    Enter      |   
//        |         aA     |         0           |           SPACE              |         SYM         |        aA          |       
//        -----------------------------------------------------------------------------------------------------------------

                 &kp TAB                                                                                             &mkp LCLK
    &kp LGUI                &kp CLCK                            &mkp LCLK                          &mkp RCLK                    &kp LALT
    &bhm HASH Q  &bhm N1 W  &bhm N2 E  &bhm N3 R  &bhm LPAR T       &bhm RPAR Y   &bhm UNDER U      &bhm MINUS I  &bhm PLUS O  &bhm AT P
    &bhm STAR A  &bhm N4 S  &bhm N5 D  &bhm N6 F  &bhm KP_DIVIDE G  &bhm COLON H  &bhm SEMICOLON J  &bhm DQT K    &bhm APOS L  &kp BSPC
    &kp LSHFT    &bhm N7 Z  &bhm N8 X  &bhm N9 C  &bhm QMARK V      &bhm EXCL B   &bhm COMMA N      &bhm DOT M    &kp RSHFT    &kp ENTER
    &kp LCTRL               &kp N0                            &kp SPACE                          &tog SYM                          &tog UPPER
            >;
        };


        sym_layer {

            bindings = <        
                 &kp C_VOL_UP                                                                                       &kp C_VOL_DN
    &kp PSCRN               &kp CLCK                             &mkp LCLK                          &mkp RCLK                         &kp C_MUTE 
    &kp HASH     &kp N1     &kp N2      &kp N3    &mt LBKT LPAR     &mt RBKT RPAR  &kp UNDER        &kp MINUS        &kp PLUS         &kp AT
    &kp STAR     &kp N4     &kp N5      &kp N6    &kp KP_DIVIDE     &kp COLON      &kp SEMICOLON    &kp DQT          &kp APOS         &kp BSPC
    &kp LSHFT    &kp N7     &kp N8      &kp N9    &kp QMARK         &kp EXCL       &kp COMMA        &kp DOT          &kp DLLR         &kp ENTER
    &kp LCTRL               &kp N0                              &kp SPACE                          &tog SYM                          &tog UPPER
            >;
        };

        upper_layer {

            bindings = <
                 &bt BT_SEL 0                                                                                       &bt BT_SEL 1
    &msc SCRL_UP            &msc SCRL_DOWN                         &mkp LCLK                           &mkp RCLK                     &bootloader
    &none        &kp UP     &none       &none      &kp LBKT          &kp RBKT      &kp LT           &kp GT          &kp PIPE         &kp EQUAL
    &kp LEFT     &kp DOWN   &kp RIGHT   &none      &kp BSLH          &kp AMPS      &kp LBRC         &kp RBRC        &kp CARET        &kp BSPC
    &kp LSHFT    &kp PSCRN  &none       &none      &kp PRCNT         &kp TILDE     &none            &none           &bt BT_CLR       &kp ENTER
    &kp LCTRL               &kp N0                                 &kp SPACE              &tog SYM                         &tog UPPER
            >;
        };
    };
};
